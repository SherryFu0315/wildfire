!function(e){function n(t){if(i[t])return i[t].exports;var a=i[t]={i:t,l:!1,exports:{}};return e[t].call(a.exports,a,a.exports,n),a.l=!0,a.exports}var i={};n.m=e,n.c=i,n.i=function(e){return e},n.d=function(e,i,t){n.o(e,i)||Object.defineProperty(e,i,{configurable:!1,enumerable:!0,get:t})},n.n=function(e){var i=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(i,"a",i),i},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n){(()=>{const{version:e="latest",databaseProvider:n,databaseConfig:i,standbyDatabaseConfigs:t=[],pageTitle:a=document.title,pageURL:o,pageURLMode:l="normal",locale:r="en",theme:s="light",defaultAvatarURL:d="https://cdn.rawgit.com/cheng-kang/wildfire/088cf3de/resources/wildfire-avatar.svg",plugins:f=[]}=window.wildfireConfig();document.getElementsByClassName("wildfire_thread")[0].innerHTML=`\n    <iframe id="wildfire_iframe" srcdoc="${`\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <meta charset="UTF-8">\n        <meta name="viewport" content="width=device-width, initial-scale=1">\n        <title>Wildfire iframe</title>\n        <style>\n          .wildfire_thread{font-family:'Helvetica Neue',arial,sans-serif;width: 100%;margin:0 auto}[v-cloak]{display:none}#wf-loading-modal{font-size:12px;display:flex;flex-direction:column;height:300px;color:#656c7a;justify-content:center;align-items:center}#wf-loading-modal img{width:66px;height:66px}@keyframes flickerAnimation{0%{opacity:1}40%{opacity:0}100%{opacity:1}}@-o-keyframes flickerAnimation{0%{opacity:1}40%{opacity:0}100%{opacity:1}}@-moz-keyframes flickerAnimation{0%{opacity:1}40%{opacity:0}100%{opacity:1}}@-webkit-keyframes flickerAnimation{0%{opacity:1}40%{opacity:0}100%{opacity:1}}.animate-flicker{-webkit-animation:flickerAnimation 1.5s infinite;-moz-animation:flickerAnimation 1.5s infinite;-o-animation:flickerAnimation 1.5s infinite;animation:flickerAnimation 1.5s infinite}\n        </style>\n      </head>\n      <body>\n        <div class="wildfire_thread">\n          <div id="wf-loading-modal" class="wf wf-theme-${s} animate-flicker">\n            <img src="data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath d='M389.699 251.826s-13.403 19.689-41.493 36.356c0 0 20.344-171.938-112.212-201.8 33.962 124.643-43.199 159.794-71.326 93.943-46.971 62.713-11.307 117.427-11.307 117.427-19.26 2.775-35.439-18.267-35.439-18.267-.145 2.592-.225 5.202-.225 7.83 0 76.383 61.921 138.303 138.303 138.303s138.303-61.921 138.303-138.303c0-12.27-1.605-24.163-4.604-35.489z' fill='%23f36b38'/%3E%3Cpath d='M389.699 251.826s-13.403 19.689-41.493 36.356c0 0 18.22-154.012-92.206-195.825v333.261c76.383 0 138.303-61.921 138.303-138.303 0-12.27-1.605-24.163-4.604-35.489z' fill='%23db450d'/%3E%3Cpath d='M316.654 364.964c0 33.498-27.156 60.654-60.654 60.654s-60.654-27.156-60.654-60.654c0-17.93 7.78-34.042 20.147-45.146 23.451 31.86 56.87-16.469 30.826-51.761 0-.001 70.335 8.813 70.335 96.907z' fill='%23fbda35'/%3E%3Cpath d='M256 270.385v155.232c33.498 0 60.654-27.156 60.654-60.654 0-67.563-41.371-88.492-60.654-94.578z' fill='%23f7ba35'/%3E%3C/svg%3E%0A" alt="Wildfire - Provided by Lahk">\n            <span id="wf-msg"></span>\n          </div>\n          <div id="wildfire" v-cloak><wildfire :key="resetKey"></wildfire></div>\n        </div>\n        <script src="https://unpkg.com/element-resize-detector@1.1.13/dist/element-resize-detector.min.js"><\/script>\n        <script>\n          const wfThread = document.getElementsByClassName("wildfire_thread")[0]\n          const erd = elementResizeDetectorMaker()\n          erd.listenTo(wfThread, (element) => {\n            const newHeight = element.offsetHeight > 300 ? element.offsetHeight : 300\n            window.parent.document.getElementById('wildfire_iframe').style.height = newHeight + 'px'\n          })\n\n\n          function loadCSS (item) {\n            if (item === undefined || item === null) { return }\n\n            let url = null\n            let loaded = null\n            if (typeof item === 'object') {\n              url = item.url\n              loaded = item.loaded\n            } else if (typeof item === 'string') {\n              url = item\n            }\n            let newCSS = document.createElement('link')\n            newCSS.rel = 'stylesheet'\n            newCSS.type = 'text/css'\n            newCSS.href = url\n            newCSS.media = 'all'\n            newCSS.onload = () => { if (loaded) { loaded() } }\n            document.head.appendChild(newCSS)\n          }\n\n          function loadJSSequentially (aList, finished) {\n            if (aList.length === 0) {\n              if (finished) { finished() }\n              return\n            }\n            let item = aList.shift()\n\n            let newScript = document.createElement('script')\n\n            let url = shouldSkip = loaded = null\n\n            if (typeof item === 'object') {\n              ({ url, shouldSkip, loaded } = item)\n              if (shouldSkip()) {\n                if (loaded) { loaded() }\n                loadJSSequentially(aList, finished)\n              } else {\n                newScript.onload = () => {\n                  if (loaded) { loaded() }\n                  loadJSSequentially(aList, finished)\n                }\n              }\n            } else if (typeof item === 'string') {\n              url = item\n              newScript.onload = () => {\n                loadJSSequentially(aList, finished)\n              }\n            }\n            newScript.src = url\n            document.head.appendChild(newScript)\n          }\n\n          function WfI18n (translation = {}, fallback = null, locale = 'en') {\n            this.translation = translation\n            this.locale = locale\n            this.fallback = fallback\n\n            this.t = (key) => {\n              let result = this.translation[this.locale]\n              if (!result) { result = this.translation[this.fallback] }\n              if (!result) { throw new WfException(&#96;Translation for locale "&#36;{this.locale}" not found.&#96;) }\n              const keys = key.split('.')\n              if (keys.length === 0) { throw new WfException('Empty translation key.') }\n              for (let i = 0; i < keys.length; i++) {\n                result = result[keys[i]]\n                if (!result) {\n                  setTimeout(() => {\n                    throw new WfException(&#96;Translation for key "&#36;{key}" not found.&#96;)\n                  })\n                  return key\n                }\n              }\n              return result\n            }\n            return {\n              t: this.t,\n            }\n          }\n\n          function WfException (message) {\n            this.message = message\n            this.toString = () => {\n              return this.message\n            }\n          }\n\n          function presentErrorMsg (errorCode) {\n            let wfLoadingModal = document.getElementById('wf-loading-modal')\n            wfLoadingModal.className = &#96;wf wf-theme-&#36;{theme}&#96\n\n            wfMsgEle.innerHTML = window._i18n.t(errorCode)\n            wfMsgEle.style.color = 'red'\n          }\n\n          function checkConfigs () {\n            if (databaseProvider !== 'firebase' && databaseProvider !== 'wilddog') {\n              presentErrorMsg('error.invalid_database_provider')\n              return false\n            } else if (!databaseConfig) {\n              presentErrorMsg('error.no_database_config')\n              return false\n            }\n            return true\n          }\n\n\n          function startWildfire () {\n            loadCSS({\n              url: &#96;https://unpkg.com/wildfire-dev/dist/&#36;{databaseProvider}/static/wildfire.css&#96;,\n              loaded: () => {\n                let jsList = []\n                if (!window.Vue) { jsList.push('https://cdn.jsdelivr.net/npm/vue@2.5.13') }\n                jsList.push(databaseProvider === 'firebase' ? 'https://www.gstatic.com/firebasejs/4.6.2/firebase.js' : 'https://cdn.wilddog.com/sdk/js/2.5.17/wilddog.js')\n                jsList.push(&#96;https://unpkg.com/wildfire@&#36;{version}/dist/&#36;{databaseProvider}/wildfire.min.js&#96;)\n\n                loadJSSequentially(jsList, () => {\n                  // TODO: remove \`.default\` in release, because \`install\` is already accessable in current dev version\n                  window.Vue.use(window.wildfire.default, {\n                    databaseProvider,\n                    databaseConfig,\n                    standbyDatabaseConfigs,\n                    pageURL,\n                    pageURLMode,\n                    pageTitle,\n                    theme,\n                    locale,\n                    defaultAvatarURL,\n                    plugins,\n                  })\n                  new window.Vue({\n                    el: '#wildfire',\n                    data () {\n                      return {\n                        resetKey: 0,\n                      }\n                    },\n                    mounted () {\n                      window.$_wildfire_reset = (config, err) => {\n                        const wfLoadingModalEle = document.getElementById('wf-loading-modal')\n                        wfLoadingModalEle && (wfLoadingModalEle.style.display = 'block')\n                        window.wildfire.reset(window.Vue, config, err)\n                        this.resetKey += 1\n                      }\n                    },\n                  })\n                })\n              }\n            })\n          }\n\n          const version = '${e}'\n          const databaseProvider = '${n}'\n          const databaseConfig = JSON.parse('${JSON.stringify(i)}')\n          let standbyDatabaseConfigs = '${t.join(",")}'.split(',')\n          if (standbyDatabaseConfigs[0] === '') standbyDatabaseConfigs = []\n          const pageTitle = '${a}'\n          const pageURL = '${o}'\n          const pageURLMode = '${l}'\n          const locale = '${r}'\n          const theme = '${s}'\n          const defaultAvatarURL = '${d}'\n          const plugins = []\n\n          window._i18n = new WfI18n({\n            en: {\n              error: {\n                invalid_database_provider: 'Please check your config: "databaseProvider" should be "firebase" or "wilddog".',\n                wildfire_thread_not_found: '"wildfire-thread" not found, please follow the steps in documentation.',\n                no_database_config: 'Please check your config: missing "databaseConfig"'\n              },\n              text: {\n                powering_wildfire: 'Powering Wildfire...'\n              }\n            },\n            'zh-CN': {\n              error: {\n                invalid_database_provider: '请检查你的配置： "databaseProvider" 应该为 "firebase" 或者 "wilddog"。',\n                wildfire_thread_not_found: '未检测到 “wildfire-thread”，请依照文档所示步骤添加。',\n                no_database_config: '请检查你的配置： 找不到 "databaseConfig"'\n              },\n              text: {\n                powering_wildfire: '正在启动野火……'\n              }\n            }\n          }, 'en', locale)\n\n          const wfMsgEle = document.getElementById('wf-msg')\n          wfMsgEle.innerHTML = window._i18n.t('text.powering_wildfire')\n\n          if (checkConfigs()) {\n            startWildfire()\n          }\n        <\/script>\n      </body>\n    </html>\n  `.replace(/"/g,"&quot;")}" width="100%" height="300" scrolling="no" frameBorder="0"></iframe>\n  `})()}]);